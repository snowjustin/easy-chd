name: Build EasyCHD for release

on:
  push:
    branches: ["github-action-testing"]
    
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: 'macos-latest'
          binary-name: 'macos-arm64'
        - os: 'macos-15-intel'
          binary-name: 'macos-intel'

    steps:
    - uses: actions/checkout@v5
    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow
        pip install -r requirements.txt

    - name: Build with Pyinstaller on ${{ matrix.os }}
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --target-arch=arm64 -n=easyCHD -i=icon.png src/app.py

    - name: Build with Pyinstaller on ${{ matrix.os }}
      if: matrix.os == 'macos-15-intel'
      run: |
        pyinstaller --onefile -n=easyCHD -i=icon.png src/app.py

    - name: Package Builds
      run: | 
        BIN_NAME="easyCHD-${{ matrix.binary-name }}"
        mv dist/* "$BIN_NAME"
        tar -czf "${BIN_NAME}.tar.gz" "$BIN_NAME"
        rm "$BIN_NAME"

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-easyCHD-${{ matrix.binary-name }}
        path: easyCHD-${{ matrix.binary-name }}.tar.gz

  release:
    name: Publish Github build release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v5
        with:
          path: ./binaries
     
      - name: Create Github release
        run: | 
          gh release create --generate-notes ./binaries/*