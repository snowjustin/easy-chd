name: Cross Platform easyCHD Build

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
            ext: ""             # Linux binary
            package: tar.gz
          - os: windows-latest
            arch: x64
            ext: ".exe"         # Windows exe
            package: zip
          - os: macos-13
            arch: x64
            ext: ""             # macOS Intel
            package: tar.gz
          - os: macos-latest
            arch: arm64
            ext: ""             # macOS ARM
            package: tar.gz

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow

      - name: Install project dependencies
        run: |
          pip install -r requirements.txt

      - name: Build binary
        run: |
          echo "Building for ${{ matrix.os }} ${{ matrix.arch }}"
          mkdir -p dist
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            pyinstaller --onefile --target-arch=arm64 -n=easyCHD -i=icon.png src/app.py
          else
            pyinstaller --onefile -n=easyCHD -i=icon.png src/app.py
          fi

      - name: Package binary
        run: |
          APP_NAME="easyCHD-${{ matrix.os }}-${{ matrix.arch }}"
          BIN_NAME="${APP_NAME}${{ matrix.ext }}"
          mv dist/* "$BIN_NAME"

          if [ "${{ matrix.package }}" = "zip" ]; then
            zip "${APP_NAME}.zip" "$BIN_NAME"
            rm "$BIN_NAME"
          else
            tar -czf "${APP_NAME}.tar.gz" "$BIN_NAME"
            rm "$BIN_NAME"
          fi
        shell: bash

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-${{ matrix.arch }}
          path: easyCHD-*

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate checksums
        run: |
          cd artifacts
          if command -v sha256sum > /dev/null; then
            find . -type f -exec sha256sum {} \; > checksums.txt
          else
            for file in $(Get-ChildItem -Path . -Recurse -File | % { $_.FullName }); do
              certutil -hashfile "$file" SHA256 | findstr /v "hash" | findstr /v "CertUtil" >> checksums.txt
            done
          fi
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Automated release for ${{ github.ref_name }}."
          files: |
            ./artifacts/**/*
            ./artifacts/checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
